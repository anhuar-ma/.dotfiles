[
{
  "Time": "2024-03-01T09:47:13.2677523-06:00",
  "Group": "Plugin",
  "Message": "Loading plugin 'AbstractQbit's Radial Follow Smoothing'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.2940802-06:00",
  "Group": "Detect",
  "Message": "Searching for tablets...",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.308736-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet '10moon 1060N'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3103711-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Acepen AP 1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3104031-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Adesso Cybertablet K8'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3104094-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul A1201'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3148915-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3213691-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3215787-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3217679-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.32186-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul AP604'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3218683-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul M0610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3218796-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'FlooGoo FMA100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3218853-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon 1060 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3220196-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3222188-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3224059-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3225992-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3226794-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon GM116HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3228173-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3230063-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3231998-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3234008-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3234705-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon GM156HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3236018-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3237965-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3239848-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3241756-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.32425-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M106K Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3243879-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3245751-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3247697-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3249614-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3250299-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M106K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3250417-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M10K Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3251882-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3253841-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3255767-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3257826-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3258494-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M10K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3258575-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M1220'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3259893-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3261864-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3263876-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3265776-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3266571-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M1230'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3267911-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.326984-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3271717-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3273783-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3274622-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M6'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.327622-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3278445-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3280725-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3283129-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3284004-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1161'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3285797-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3288217-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3290516-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3292848-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3293775-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD156 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3295573-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3298034-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3300437-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3302851-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3303703-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1560'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3303881-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1561'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3305629-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3308297-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3310517-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3312906-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3313694-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD2200'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3313897-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S56K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3315466-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3317784-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3320106-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3322341-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3323324-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S620'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3324869-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3327103-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3329241-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3331415-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3332287-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3333875-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3336012-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3338287-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.334052-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3341333-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S830'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3342953-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3345273-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3347498-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3349495-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3350151-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius G-Pen 560'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3350231-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius i405x'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3350422-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius i608x'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3350482-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion 420'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3350565-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion G10T'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3350666-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion G930L'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3350725-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GC610'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3352283-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3354125-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3356085-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3358381-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3359188-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-220 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3359273-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-221 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3359327-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-221'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3359445-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H1060P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3360764-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3362651-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3364596-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3366445-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3367162-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H1161'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3368541-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3370402-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3372258-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3374099-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3374833-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H320M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.337613-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3378229-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3380075-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3382-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3382745-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H420'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3382817-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H420X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3384128-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3386149-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3388216-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3390088-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3390842-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H430P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3392163-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.339409-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3395976-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3397981-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3398796-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H580X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3398867-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3400244-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3402102-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3404026-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3406038-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3406802-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro V3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3406874-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3408176-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3410086-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3412062-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3413935-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3414763-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.341616-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3418141-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3420097-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3421958-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3422685-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H640P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3423999-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3425913-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3427856-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3429833-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3431834-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3433761-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3435611-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3437546-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3438376-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H641P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3438454-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H642'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3439746-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3441699-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3443558-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3445487-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3446187-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3446293-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H950P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3447606-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3490586-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3493564-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3495443-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3496181-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HC16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3497529-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3499361-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3501161-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3502972-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3503611-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS610'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3504928-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3506776-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3508572-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3510394-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3511024-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS611'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3512322-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3514137-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3515954-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3517924-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3518559-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS64'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3519878-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.352168-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3523493-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3525316-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3525919-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS95'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3527211-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3529035-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3530858-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3532674-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3533272-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.353457-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3536437-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3538227-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3540046-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3540599-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 13'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3541913-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3543728-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3545606-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3547443-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3548022-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 16 (2021)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3549344-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3551288-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3553127-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3554918-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.355551-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3556823-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3558607-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3560416-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.356222-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3562801-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 20'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3562891-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 22 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3564181-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3565934-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3567751-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3569532-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3570114-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 22'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3571432-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.357321-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3575018-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3576808-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3577399-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 24 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3578725-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.358052-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3582314-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.358412-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.358808-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3588163-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 13 (2.5k)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3589489-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3591249-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3593048-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3594829-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3595424-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 13'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3596722-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3598562-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3600344-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3602139-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3602764-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 16 (2.5k)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3604049-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3605799-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.360755-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3609292-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3611121-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3612863-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3614628-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3616444-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.361702-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3618425-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3620238-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3622042-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3623832-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3625654-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.362741-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3629195-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3630949-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3631485-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 20'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3631578-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 24 (4K)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3632874-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3634663-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3636413-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3638162-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.363875-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 24'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.363884-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion New 1060 Plus (2048)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.363892-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion New 1060 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3640214-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3641965-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3643809-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3645661-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3646247-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q11K V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3646315-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q11K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3647599-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3649337-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3651081-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3653024-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3653596-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q620M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3654907-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3656645-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3658406-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.366017-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3660715-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q630M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3660793-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RDS-160'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3662085-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3663814-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.366556-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3667319-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3667868-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RTE-100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3667946-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RTM-500'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3669234-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3670972-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3672741-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw0.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3674577-06:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw1.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /home/anhuar/.cache/paru/clone/opentabletdriver/src/OpenTabletDriver-0.6.4.0/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675165-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion WH1409 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675232-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion WH1409'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675297-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'KENTING K5540'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675351-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'LifeTec LT9570'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675402-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Monoprice 10594'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675455-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Monoprice MP1060-HA60'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675514-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A609'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675566-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675614-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675672-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Intangbo M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675744-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Intangbo S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675817-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675894-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos N4'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3675944-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos N7'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676024-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.36761-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'RobotPen T9A'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676154-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UC-Logic 1060N'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676219-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UC-Logic PF1209'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676272-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE S640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676349-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE U1200'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676408-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE U1600'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676461-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGTABLET M708 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676513-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGTABLET M708'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676567-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676647-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676697-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676748-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A30 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676811-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A30'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676867-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A50 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676919-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A50'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3676978-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK S640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.367703-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK S640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677084-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677137-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK1060PRO'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677198-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK430 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677251-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677303-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677361-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK Viola (VO1060)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677615-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'ViewSonic Woodpad PF0730'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677668-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTC-4110WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677719-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTC-6110WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677784-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677863-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-440'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3677972-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678023-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678101-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678176-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678251-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678312-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-660'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678369-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTF-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678423-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-301'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678481-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678583-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-461'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678728-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-470'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678823-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-480'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3678926-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-490'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3679019-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-661'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3679173-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-670'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3679273-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-680'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3679367-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3679469-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-4100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3679562-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-4100WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.36798-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3679902-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-470'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3679995-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-471'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680097-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-472'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680196-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-480'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680309-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-490'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680409-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-6100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680479-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-6100WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680594-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-671'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680695-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-672'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680797-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-680'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3680892-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681011-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom DTC-133'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368111-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom DTH-1320'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681178-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 13HD (DTK-1300)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681262-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 16 (DTK1660)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681363-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 12WX (DTZ-1200W)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681431-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom ET-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368153-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom ET-0405A-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681626-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom FT-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681741-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681839-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0608-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3681949-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0912-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3682057-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-1212-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3682169-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-1218-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3682274-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom MTE-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3682381-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3682482-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-451'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3682589-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.36827-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3682795-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-651'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3682898-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-660'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368299-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-850'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683086-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-851'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683174-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-860'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683273-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-1240'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683362-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-440'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683459-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368355-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-540WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683652-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683762-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683861-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-840'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3683964-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTU-600U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368403-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-1230'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368418-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-1231W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3684274-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3684379-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-431W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3684558-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3684669-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-631W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3684761-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-930'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368487-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3684969-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0608-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685065-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0912-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368516-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-1212-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685264-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-1218-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685375-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Waltop Slim Tablet 5.8\"'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685446-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XenceLabs Pen Tablet Medium'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685518-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XenceLabs Pen Tablet Small'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685581-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX P1-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685645-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX P3-1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685707-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX X1-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685785-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 10 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685854-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368593-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3685997-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368607-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686131-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13.3 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.36862-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13.3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686273-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 15.6 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686336-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 15.6'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686427-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 16 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686512-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 16 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686582-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 22HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686645-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist Pro 16TP'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368671-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686781-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686881-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3686996-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01 V2 (variant 2)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687095-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687207-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687286-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 02'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687353-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 03'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687414-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco L'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687489-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687559-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco mini4'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687629-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco mini7'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687802-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro Medium'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368788-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro Small'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3687957-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro SW'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688019-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Innovator 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368808-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 03'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688204-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 05 V3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688271-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 06'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.368833-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 06C'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688402-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688495-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430S V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688557-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688629-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G540 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688697-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G540'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688767-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688839-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3688919-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3689036-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3689118-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960S Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3689181-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:13.3705879-06:00",
  "Group": "Detect",
  "Message": "No tablets were detected.",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.1142191-06:00",
  "Group": "HidSharpDeviceRootHub",
  "Message": "Changes: 1, Add: 1, Remove: 0",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.1380793-06:00",
  "Group": "RootHub",
  "Message": "Invoking DevicesChanged",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.1392718-06:00",
  "Group": "Detect",
  "Message": "Searching for tablets...",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.1399607-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet '10moon 1060N'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.1400061-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Acepen AP 1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.1400239-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Adesso Cybertablet K8'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.1400347-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul A1201'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.3886202-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul AP604'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.388671-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul M0610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.3886841-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'FlooGoo FMA100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.388695-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon 1060 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.4622669-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon GM116HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.5342642-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon GM156HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.6090873-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M106K Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.6792399-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M106K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.6793111-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M10K Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.7512483-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M10K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.7513127-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M1220'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.8244385-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M1230'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.8962756-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M6'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:26.9692524-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1161'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.0412423-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD156 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.1132344-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1560'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.1132842-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1561'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.1812425-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD2200'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.181287-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S56K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.1813199-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S620'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.2532666-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.3253405-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S830'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.3872618-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius G-Pen 560'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.3873522-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius i405x'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.3873694-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius i608x'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.38738-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion 420'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.3873939-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion G10T'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.3873981-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion G930L'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.3874022-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GC610'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.4552587-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-220 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.4553225-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-221 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.4553296-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-221'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.4553353-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H1060P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.6290319-06:00",
  "Group": "Device",
  "Message": "Initializing device 'Huion Tablet' /sys/devices/pci0000:00/0000:00:01.3/0000:02:00.0/usb1/1-2/1-2:1.0/0003:256C:006D.0001/hidraw/hidraw0",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.6296926-06:00",
  "Group": "Device",
  "Message": "Using report parser type 'OpenTabletDriver.Configurations.Parsers.UCLogic.UCLogicTiltReportParser'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.6579134-06:00",
  "Group": "Device",
  "Message": "Initialized string index 200",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.6618058-06:00",
  "Group": "Detect",
  "Message": "Found tablet 'Huion H1060P'",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.6639122-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H1161'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.741351-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H320M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.8068335-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H420'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.8068917-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H420X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.8885097-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H430P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.9612824-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H580X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:27.9613175-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.0282745-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro V3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.0283261-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.096261-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.1682677-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H640P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.3151836-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H641P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.3152324-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H642'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.3853636-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.3854094-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H950P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.4583622-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HC16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.5302892-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS610'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.6022946-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS611'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.6752916-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS64'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.747357-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS95'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.8142866-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.8824722-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 13'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:28.9543051-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 16 (2021)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.0213085-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.0933198-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 20'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.093354-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 22 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.1663204-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 22'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.2383106-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 24 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.3113156-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.3113534-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 13 (2.5k)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.3883134-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 13'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.4613255-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 16 (2.5k)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.6003446-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.7453213-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 20'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.745356-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 24 (4K)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.8123306-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 24'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.8123725-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion New 1060 Plus (2048)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.8123789-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion New 1060 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.8803252-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q11K V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.8803609-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q11K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:29.9523333-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q620M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.0243381-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q630M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.0243921-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RDS-160'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.0973375-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RTE-100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.0973718-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RTM-500'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1693447-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion WH1409 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694135-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion WH1409'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694268-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'KENTING K5540'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694336-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'LifeTec LT9570'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694459-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Monoprice 10594'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694513-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Monoprice MP1060-HA60'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.169456-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A609'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694607-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694709-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694758-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Intangbo M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694817-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Intangbo S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1694947-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695014-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos N4'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695131-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos N7'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695199-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695321-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'RobotPen T9A'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.169537-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UC-Logic 1060N'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695417-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UC-Logic PF1209'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695463-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE S640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.169558-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE U1200'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695632-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE U1600'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695678-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGTABLET M708 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695892-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGTABLET M708'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1695959-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696017-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696153-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696204-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A30 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696248-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A30'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696294-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A50 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696402-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A50'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696452-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK S640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696498-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK S640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696607-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696663-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK1060PRO'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696714-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK430 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696761-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696872-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1696924-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK Viola (VO1060)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.169697-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'ViewSonic Woodpad PF0730'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697013-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTC-4110WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697124-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTC-6110WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697174-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697236-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-440'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697375-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697427-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697549-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697619-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697849-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697914-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-660'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1697958-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTF-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.169807-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-301'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1698121-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.16982-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-461'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1698359-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-470'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1698483-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-480'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1698547-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-490'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1698656-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-661'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1698757-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-670'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1698878-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-680'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1698937-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1699065-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-4100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.169913-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-4100WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1699504-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1699586-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-470'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1699726-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-471'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1699798-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-472'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1699918-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-480'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1699987-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-490'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700051-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-6100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700154-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-6100WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700215-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-671'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700327-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-672'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700393-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-680'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700509-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700575-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom DTC-133'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700637-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom DTH-1320'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700738-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 13HD (DTK-1300)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700786-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 16 (DTK1660)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1700851-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 12WX (DTZ-1200W)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701032-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom ET-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701098-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom ET-0405A-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.170122-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom FT-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701287-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701407-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0608-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701473-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0912-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701539-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-1212-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701649-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-1218-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701714-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom MTE-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701829-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701897-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-451'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1701992-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1728886-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729415-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-651'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729509-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-660'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729571-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-850'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729645-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-851'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729709-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-860'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729783-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-1240'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729845-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-440'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729925-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1729996-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-540WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730087-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730155-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.173022-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-840'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730291-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTU-600U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730331-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-1230'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.17304-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-1231W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730467-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730553-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-431W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730609-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730664-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-631W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730727-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-930'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730783-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730849-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0608-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730916-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0912-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1730977-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-1212-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731037-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-1218-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731113-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Waltop Slim Tablet 5.8\"'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.173116-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XenceLabs Pen Tablet Medium'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.17312-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XenceLabs Pen Tablet Small'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731255-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX P1-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.17313-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX P3-1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731344-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX X1-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731384-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 10 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731437-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731479-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731526-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731568-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731625-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13.3 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731672-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13.3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731719-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 15.6 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731774-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 15.6'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731834-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 16 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731876-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 16 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731928-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 22HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1731973-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist Pro 16TP'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732015-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732056-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732128-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732196-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01 V2 (variant 2)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732269-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732319-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732373-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 02'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732418-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 03'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732463-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco L'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732543-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732586-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco mini4'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732633-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco mini7'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732738-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro Medium'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732808-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro Small'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732851-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro SW'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732894-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Innovator 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1732938-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 03'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.173303-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 05 V3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733077-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 06'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733134-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 06C'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.173318-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733242-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430S V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733304-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.173335-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G540 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733396-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G540'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.173344-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733497-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733546-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733634-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.173368-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960S Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1733724-06:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1845228-06:00",
  "Group": "Evdev",
  "Message": "Successfully initialized virtual mouse. (code NONE)",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1911089-06:00",
  "Group": "Huion H1060P",
  "Message": "Output mode: Relative Mode",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1939345-06:00",
  "Group": "Huion H1060P",
  "Message": "Relative Mode Sensitivity (X, Y): <8, 8>",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1941801-06:00",
  "Group": "Huion H1060P",
  "Message": "Relative Mode Rotation: 0",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.1949889-06:00",
  "Group": "Huion H1060P",
  "Message": "Reset time: 00:00:00.1000000",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.201812-06:00",
  "Group": "Huion H1060P",
  "Message": "Tip Binding: [Mouse Button Binding: Left]@0%",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.2139621-06:00",
  "Group": "Evdev",
  "Message": "Successfully initialized virtual keyboard. (code NONE)",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.217408-06:00",
  "Group": "Huion H1060P",
  "Message": "Eraser Binding: [Multi-Key Binding: Control+Z]@0%",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.2313297-06:00",
  "Group": "Huion H1060P",
  "Message": "Filters: RadialFollow.RadialFollowSmoothingTabletSpace",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-03-01T09:47:30.231363-06:00",
  "Group": "Settings",
  "Message": "Driver is enabled.",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
